/*
 * ParallelStack RSearch API
 * REST API Specification for ParallelStack RSearch API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: team@parallelstack.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.parallelstack.rsearch.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchQuerySearchAggregations
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-15T12:24:06.006+05:30")
public class SearchQuerySearchAggregations {
  @SerializedName("field_name")
  private String fieldName = null;

  /**
   * Gets or Sets aggType
   */
  @JsonAdapter(AggTypeEnum.Adapter.class)
  public enum AggTypeEnum {
    TERM("term"),
    
    RANGE("range"),
    
    HISTOGRAM("histogram"),
    
    LOCATION("location");

    private String value;

    AggTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AggTypeEnum fromValue(String text) {
      for (AggTypeEnum b : AggTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AggTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AggTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AggTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AggTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("agg_type")
  private AggTypeEnum aggType = null;

  @SerializedName("term_agg_size")
  private BigDecimal termAggSize = null;

  @SerializedName("range")
  private List<Object> range = null;

  @SerializedName("origin")
  private List<Object> origin = null;

  @SerializedName("buckets")
  private BigDecimal buckets = null;

  public SearchQuerySearchAggregations fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public SearchQuerySearchAggregations aggType(AggTypeEnum aggType) {
    this.aggType = aggType;
    return this;
  }

   /**
   * Get aggType
   * @return aggType
  **/
  @ApiModelProperty(required = true, value = "")
  public AggTypeEnum getAggType() {
    return aggType;
  }

  public void setAggType(AggTypeEnum aggType) {
    this.aggType = aggType;
  }

  public SearchQuerySearchAggregations termAggSize(BigDecimal termAggSize) {
    this.termAggSize = termAggSize;
    return this;
  }

   /**
   * Get termAggSize
   * @return termAggSize
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTermAggSize() {
    return termAggSize;
  }

  public void setTermAggSize(BigDecimal termAggSize) {
    this.termAggSize = termAggSize;
  }

  public SearchQuerySearchAggregations range(List<Object> range) {
    this.range = range;
    return this;
  }

  public SearchQuerySearchAggregations addRangeItem(Object rangeItem) {
    if (this.range == null) {
      this.range = new ArrayList<Object>();
    }
    this.range.add(rangeItem);
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @ApiModelProperty(value = "")
  public List<Object> getRange() {
    return range;
  }

  public void setRange(List<Object> range) {
    this.range = range;
  }

  public SearchQuerySearchAggregations origin(List<Object> origin) {
    this.origin = origin;
    return this;
  }

  public SearchQuerySearchAggregations addOriginItem(Object originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<Object>();
    }
    this.origin.add(originItem);
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public List<Object> getOrigin() {
    return origin;
  }

  public void setOrigin(List<Object> origin) {
    this.origin = origin;
  }

  public SearchQuerySearchAggregations buckets(BigDecimal buckets) {
    this.buckets = buckets;
    return this;
  }

   /**
   * Get buckets
   * @return buckets
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getBuckets() {
    return buckets;
  }

  public void setBuckets(BigDecimal buckets) {
    this.buckets = buckets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchQuerySearchAggregations searchQuerySearchAggregations = (SearchQuerySearchAggregations) o;
    return Objects.equals(this.fieldName, searchQuerySearchAggregations.fieldName) &&
        Objects.equals(this.aggType, searchQuerySearchAggregations.aggType) &&
        Objects.equals(this.termAggSize, searchQuerySearchAggregations.termAggSize) &&
        Objects.equals(this.range, searchQuerySearchAggregations.range) &&
        Objects.equals(this.origin, searchQuerySearchAggregations.origin) &&
        Objects.equals(this.buckets, searchQuerySearchAggregations.buckets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldName, aggType, termAggSize, range, origin, buckets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchQuerySearchAggregations {\n");
    
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    aggType: ").append(toIndentedString(aggType)).append("\n");
    sb.append("    termAggSize: ").append(toIndentedString(termAggSize)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    buckets: ").append(toIndentedString(buckets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

